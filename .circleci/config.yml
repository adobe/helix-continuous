version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:8-jessie

parameters:
  GDM_MODULE_BRANCHES:
    type: string
    default: "{}"
  SMOKETEST_BRANCH:
    type: string
    default: master

aliases:
    - compute_parameters: &compute_parameters
        name: Compute parameters and echo values
        command: |
            echo "Branch(es) received as parameter: << pipeline.parameters.GDM_MODULE_BRANCHES >>"
            cli_branch=$(echo '<< pipeline.parameters.GDM_MODULE_BRANCHES >>' | jq -r 'if ."helix-cli" then ."helix-cli" else "master" end');
            echo "Using helix-cli branch: ${cli_branch}"
            echo "Using project-helix.io branch: << pipeline.parameters.SMOKETEST_BRANCH >>"

            # Require to "pass" variables across steps
            echo "export cli_branch=$cli_branch" >> $BASH_ENV
            
    - set_git_user: &set_git_user
        name: Prepare test git user
        command: git config --global user.email "circleci@project-helix.io" && git config --global user.name "CircleCi Build"

jobs:
    init:
        <<: *defaults

        steps:
            # Prepare working env
            - checkout

            - run:
                name: Validate orbs
                command: |
                    curl -fLSs https://circle.ci/cli | DESTDIR=/home/circleci bash
                    find . -name orb.yml -exec ./circleci orb validate {} \;

            - run: *compute_parameters

            - run:
                name: Install npm 6.4.1
                command: sudo npm -g install npm@6.4.1

            - run: *set_git_user

            - restore_cache:
                keys:
                - v5-dependencies-{{ arch }}-continuous-npm-cache

            - run:
                name: Install Git Dependency Maker tool
                command: npm install --no-audit --prefer-offline
                working_directory: scripts/gdm

            # Prepare helix-cli to run the smoke tests
            - run:
                name: Clone helix-cli
                command: |
                    git clone --branch $cli_branch --single-branch --depth 1 https://github.com/adobe/helix-cli.git
                    
            - run:
                name: Output helix-cli branch (for validation purpose)
                command: git rev-parse --abbrev-ref HEAD
                working_directory: helix-cli
            
            - run:
                name: Install using git branches (master or specified)
                command: env GDM_MODULE_BRANCHES='<< pipeline.parameters.GDM_MODULE_BRANCHES>>' node ../scripts/gdm/index.js
                working_directory: helix-cli

            - persist_to_workspace:
                root: /home/circleci
                paths:
                    # for whatever reason, working directoy is project.
                    - project
                    - .npm

    test_project_helix:
        <<: *defaults

        steps:
            - attach_workspace:
                at: /home/circleci

            - run: *compute_parameters
            - run: *set_git_user

            # Checkout project-helix.io
            - run:
                name: Clone project-helix.io
                command: |
                    git clone --single-branch --depth 1 -b << pipeline.parameters.SMOKETEST_BRANCH >> https://github.com/adobe/project-helix.io.git

            - run:
                name: Install project-helix.io
                command: npm install --no-audit --prefer-offline
                working_directory: project-helix.io

            - run: mkdir junit

            # Run the smoke tests
            - run:
                name: Run Smoke Tests on project-helix.io
                command: env HLX_SMOKE_EXEC='node ~/project/helix-cli/index.js --log-level warn' MOCHA_FILE='/home/circleci/project/junit/test-results-helix-cli.xml' npx mocha --exit test/smoke/* --reporter mocha-junit-reporter
                working_directory: project-helix.io

            - store_test_results:
                path: junit

            - store_artifacts:
                path: junit

    test_helix_cli:
        <<: *defaults

        steps:
            - attach_workspace:
                at: /home/circleci

            - run: *set_git_user

            - run: mkdir junit

            - run:
                name: Test helix-cli
                command: env MOCHA_FILE='/home/circleci/project/junit/test-results-helix-cli.xml' npm run test-ci
                working_directory: helix-cli

            - store_test_results:
                path: junit

            - store_artifacts:
                path: junit

    finalize:
        <<: *defaults

        steps:
            - attach_workspace:
                at: /home/circleci

            - save_cache:
                paths:
                - /home/circleci/.npm
                key: v5-dependencies-{{ arch }}-continuous-npm-cache

workflows:
    version: 2
    build:
        jobs:
            - init
            - test_project_helix:
                requires:
                - init
            - test_helix_cli:
                requires:
                - init
            - finalize:
                requires:
                - test_project_helix
                - test_helix_cli
