version: 2.1
executors:
  node8:
    docker:
    # use latest node 8 on debian 8 (jessie)
    - image: circleci/node:8-jessie

commands:
    compute_parameters:
        steps:
            - run:
                name: Compute parameters and echo values
                command: |
                    echo -n "Branch(es) received as parameter: " && [[ ! -z "${GDM_MODULE_BRANCHES}" ]] && echo "${GDM_MODULE_BRANCHES}" || echo "No parameter received - using all master"
                    if [ -z ${GDM_MODULE_BRANCHES} ]; then GDM_MODULE_BRANCHES="{}"; fi
                    cli_branch=$(echo $GDM_MODULE_BRANCHES | jq -r 'if ."helix-cli" then ."helix-cli" else "master" end');
                    echo "Using helix-cli branch: ${cli_branch}"
                    if [ -z ${SMOKETEST_BRANCH} ]; then SMOKETEST_BRANCH="master"; fi
                    echo "Using project-helix.io branch: ${SMOKETEST_BRANCH}"
                    # Require to "pass" variables across steps
                    echo "export GDM_MODULE_BRANCHES=$GDM_MODULE_BRANCHES" >> $BASH_ENV
                    echo "export cli_branch=$cli_branch" >> $BASH_ENV
                    echo "export SMOKETEST_BRANCH=$SMOKETEST_BRANCH" >> $BASH_ENV
    set_git_user:
        steps:
            - run:
                name: Prepare test git user
                command: git config --global user.email "circleci@project-helix.io" && git config --global user.name "CircleCi Build"
    

jobs:
    build_cli:
        executor: node8

        steps:
            # Prepare working env
            - checkout
            - compute_parameters

            - run:
                name: Install npm 6.4.1
                command: sudo npm -g install npm@6.4.1

            - set_git_user

            - restore_cache:
                keys:
                - v4-dependencies-{{ arch }}-continuous-npm-cache

            - run:
                name: Install Git Dependency Maker tool
                command: npm install --no-audit --prefer-offline
                working_directory: scripts/gdm

            # Prepare helix-cli to run the smoke tests
            - run:
                name: Clone helix-cli
                command: |
                    git clone --branch $cli_branch --single-branch --depth 1 https://github.com/adobe/helix-cli.git
            
            - run:
                name: Install using git branches (master or specified)
                command: env GDM_MODULE_BRANCHES=$GDM_MODULE_BRANCHES node ../scripts/gdm/index.js
                working_directory: helix-cli

            - persist_to_workspace:
                root: /home/circleci
                paths:
                    # for whatever reason, working directoy is project.
                    - project
                    - .npm


    test_project_helix:
        executor: node8

        steps:
            - attach_workspace:
                at: /home/circleci

            - compute_parameters
            - set_git_user

            # Checkout project-helix.io
            - run:
                name: Clone project-helix.io
                command: |
                    git clone --single-branch --depth 1 -b ${SMOKETEST_BRANCH} https://github.com/adobe/project-helix.io.git

            - run:
                name: Install project-helix.io
                command: npm install --no-audit --prefer-offline
                working_directory: project-helix.io

            # Run the smoke tests
            - run:
                name: Run Smoke Tests on project-helix.io
                command: env HLX_SMOKE_EXEC='node ~/project/helix-cli/index.js --log-level warn' npx mocha --exit test/smoke/*
                working_directory: project-helix.io

    test_helix_cli:
        executor: node8

        steps:
            - attach_workspace:
                at: /home/circleci

            - set_git_user
            
            # Run the hlx-cli (last step because they might fail for good reason - tests upgrade required, non-backward comp... )
            - run: mkdir junit
            
            - run:
                name: Test helix-cli
                command: npm run test
                working_directory: helix-cli
                environment:
                    MOCHA_FILE: junit/test-results.xml

            - store_test_results:
                path: junit

            - store_artifacts:
                path: junit

    finalize:
        executor: node8
        steps:
            - save_cache:
                paths:
                - /home/circleci/.npm
                key: v4-dependencies-{{ arch }}-continuous-npm-cache

workflows:
    version: 3
    build:
        jobs:
            - build_cli
            - test_project_helix:
                requires:
                - build_cli
            - test_helix_cli:
                requires:
                - build_cli
            - finalize:
                requires:
                - test_project_helix
                - test_helix_cli
